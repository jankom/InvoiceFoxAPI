FrackPHP:
=========

modifications:
--------------

{{code}} --> ". code . " or '.code.' 

.. --> .=  

sfun --> static function

fun --> function

&join = x -> return x + x; --> 

static function lsf__join(x) { return x + x; }

array_map($arr, &join); --> array_map($arr, "Curr_class::lsf__join");

`some_string --> 'some_string'

[0, 2, 4] --> array(0, 2, 4)

[`name : `Janko, `surname : `Metelko] --> array('name' => 'Janko', 'surname' => 'Metelko')

Class:staticfun() --> Class::staticfun ?

operators for common uses:
--------------------------

++ --> array_merge($x, $y);


no outer scope except $GLOBALS ... so local vars could loose $ too:
-------------------------------------------------------------------

@@dbc = $GLOBALS['dbc']

var some_local_var = 1 --> $some_local_var = 1 //introduce variable
some_local_var --> $some_loval_var

specials : 
----------

runtime type checking injections:
.................................

fun postIt(x:Int) -- means x should be int .. just info for now

fun postIt(x:Int!) -- means x MUST be int .. adds mustBeInt(x);


many outputs:
.............

nice php, condensed php, ?debug php?



//// QUERY DSL -- neki kao templati funkcij ... samo ni neke uporabe videt tako kot sem si zastavu zaenkrat

fun getBookName(id:Int!) is selectFieldTpl
{
	what = 'name'
	where = "id = [id]"
	from = @@tables.books
}	
	
tfun selectFieldTpl(id:Int!)
{
	return DBs::selectField(@@dbc, [
		`what : %what
		`where : %where
		`from : %from
	]);
}